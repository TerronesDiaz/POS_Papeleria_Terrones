@page "/articulos/entrada/{Id:int}"
@inject HttpClient Http
@inject NavigationManager Navegar
<h3>Entrada de artículo</h3>
@if (elArticulo != null) 
{
<h3>@elArticulo.Nombre</h3>

<EditForm Model="@laEntrada" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row mb-3">
        <div class="col">
            <label>Nota</label>
            <InputText class="form-control" @bind-Value="laEntrada.Nota"></InputText>
            <ValidationMessage For="()=>laEntrada.Nota" />
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            <label>Cantidad</label>
            <InputNumber class="form-control" @bind-Value="laEntrada.Cantidad"></InputNumber>
            <ValidationMessage For="()=>laEntrada.Cantidad" />
        </div>
    </div>

    <div class="row mb-3">
        <div class="col">
            <label>Fecha</label>
            <InputDate class="form-control" @bind-Value="laEntrada.Fecha"></InputDate>
            <ValidationMessage For="()=>laEntrada.Fecha" />
        </div>
    </div>

    <div class="row">
        <div class="col">
            <button type="submit" class="btn btn-success">Guardar</button>
        </div>
    </div>
</EditForm>
}
@code {
   [Parameter]
   public int Id { get; set; }
   private Entrada laEntrada;
   private Articulo elArticulo;

   protected override async Task OnInitializedAsync()
   {
       elArticulo = await Http.GetFromJsonAsync<Articulo>($"/api/articulos/{Id}");
       laEntrada = new Entrada() { Fecha = DateTime.Now, ArticuloId = Id };
   }
   private async Task Guardar()
   {
       await Http.PostAsJsonAsync("/api/articulos/entradas", laEntrada);
       Navegar.NavigateTo("/articulos");
   }
}
